!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.mirageo=e():t.mirageo=e()}(this,function(){return function(t){function e(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,e),o.l=!0,o.exports}var n={};return e.m=t,e.c=n,e.i=function(t){return t},e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:r})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=8)}([function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(t,e){return e&&t?Array.isArray(t)?i(t,e):u(t,e):[]}function u(t,e){return(0,f.default)(e,t).map(function(t){return{lat:t.geometry.coordinates[1],lng:t.geometry.coordinates[0]}})}function i(t,e){for(var n=[],r=0;r<e;r++)n.push({lat:a(t[2],t[0],180,4),lng:a(t[1],t[3],360,4)});return n}function a(t,e,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return t+=n/2,e+=n/2,e<t&&(e+=n),1*(Math.random()*(e-t)+t).toFixed(r)%n-n/2}Object.defineProperty(e,"__esModule",{value:!0}),e.randomPoints=o,e.getPointsInPolygon=u,e.getPointsInBBox=i,e.randomInRange=a;var c=n(2),f=r(c)},function(t,e,n){"use strict";function r(t){return t?s(t):[a(),c()]}function o(t){return function(e,n){return[e[0]+t[0],e[1]+t[1]]}}function u(){return Math.random()-.5}function a(){return 360*u()}function c(){return 180*u()}function f(t){return{type:"Point",coordinates:t||[a(),c()]}}function s(t){return[Math.random()*(t[2]-t[0])+t[0],Math.random()*(t[3]-t[1])+t[1]]}function p(t){return{type:"Polygon",coordinates:t}}function l(t){return{type:"Feature",geometry:t,properties:{}}}function y(t){return{type:"FeatureCollection",features:t}}t.exports=function(){throw new Error("call .point() or .polygon() instead")},t.exports.position=r,t.exports.point=function(t,e){var n=[];for(i=0;i<t;i++)n.push(l(e?f(r(e)):f()));return y(n)},t.exports.polygon=function(t,e,n,u){function a(t,e,n){n[e]=e>0?t+n[e-1]:t}function c(t,e){t=2*t*Math.PI/g[g.length-1];var r=Math.random();s.push([r*n*Math.sin(t),r*n*Math.cos(t)])}"number"!=typeof e&&(e=10),"number"!=typeof n&&(n=10);var f=[];for(i=0;i<t;i++){var s=[],g=Array.apply(null,new Array(e+1)).map(Math.random);g.forEach(a),g.forEach(c),s[s.length-1]=s[0],s=s.map(o(r(u))),f.push(l(p([s])))}return y(f)}},function(t,e,n){"use strict";function r(t,e,n,c){if("boolean"==typeof n&&(c=n,n={}),t<1)return new Error("Number must be >= 1");if("Feature"!==e.type)return new Error("Polygon parameter must be a Feature<(Polygon|MultiPolygon)>");if(this instanceof r)return new r(t,e,n);n=n||{},c=c||!1;for(var f=[],s=o(e),p=Math.round(parseFloat(t)),l=0;l<=p;l++){if(l===p)return c?u(f):f;var y=a("point",1,{bbox:s});i(y.features[0],e)===!1&&(l=--l),i(y.features[0],e)===!0&&(y.features[0].properties=n,f.push(y.features[0]))}}var o=n(4),u=n(5),i=n(3),a=n(7);t.exports=r},function(t,e,n){"use strict";function r(t,e){for(var n=!1,r=0,o=e.length-1;r<e.length;o=r++){var u=e[r][0],i=e[r][1],a=e[o][0],c=e[o][1];i>t[1]!=c>t[1]&&t[0]<(a-u)*(t[1]-i)/(c-i)+u&&(n=!n)}return n}t.exports=function(t,e){var n=e.geometry.coordinates,o=[t.geometry.coordinates[0],t.geometry.coordinates[1]];"Polygon"===e.geometry.type&&(n=[n]);for(var u=!1,i=0;i<n.length&&!u;){if(r(o,n[i][0])){for(var a=!1,c=1;c<n[i].length&&!a;)r(o,n[i][c])&&(a=!0),c++;a||(u=!0)}i++}return u}},function(t,e,n){"use strict";var r=n(6).coordEach;t.exports=function(t){var e=[1/0,1/0,-(1/0),-(1/0)];return r(t,function(t){e[0]>t[0]&&(e[0]=t[0]),e[1]>t[1]&&(e[1]=t[1]),e[2]<t[0]&&(e[2]=t[0]),e[3]<t[1]&&(e[3]=t[1])}),e}},function(t,e,n){"use strict";t.exports=function(t){return{type:"FeatureCollection",features:t}}},function(t,e,n){"use strict";function r(t,e,n){var r,o,u,i,a,c,f,s,p,y=0,g="FeatureCollection"===t.type,d="Feature"===t.type,h=g?t.features.length:1;for(r=0;r<h;r++)for(s=g?t.features[r].geometry:d?t.geometry:t,p="GeometryCollection"===s.type,c=p?s.geometries.length:1,i=0;i<c;i++)if(a=p?s.geometries[i]:s,f=a.coordinates,y=!n||"Polygon"!==a.type&&"MultiPolygon"!==a.type?0:1,"Point"===a.type)e(f);else if("LineString"===a.type||"MultiPoint"===a.type)for(o=0;o<f.length;o++)e(f[o]);else if("Polygon"===a.type||"MultiLineString"===a.type)for(o=0;o<f.length;o++)for(u=0;u<f[o].length-y;u++)e(f[o][u]);else{if("MultiPolygon"!==a.type)throw new Error("Unknown Geometry Type");for(o=0;o<f.length;o++)for(u=0;u<f[o].length;u++)for(l=0;l<f[o][u].length-y;l++)e(f[o][u][l])}}function o(t,e,n,o){return r(t,function(t){n=e(n,t)},o),n}function u(t,e){var n;switch(t.type){case"FeatureCollection":for(features=t.features,n=0;n<t.features.length;n++)e(t.features[n].properties);break;case"Feature":e(t.properties)}}function i(t,e,n){return u(t,function(t){n=e(n,t)}),n}t.exports.coordEach=r,t.exports.coordReduce=o,t.exports.propEach=u,t.exports.propReduce=i},function(t,e,n){"use strict";var r=n(1);t.exports=function(t,e,n){switch(n=n||{},e=e||1,t){case"point":case"points":case void 0:return r.point(e,n.bbox);case"polygon":case"polygons":return r.polygon(e,n.num_vertices,n.max_radial_length,n.bbox);default:throw new Error("Unknown type given: valid options are points and polygons")}}},function(t,e,n){"use strict";function r(t){t=Object.assign({},i,t);var e=(0,u.randomPoints)(t.bound,t.count);return t.geojson&&(e=o(e)),e}function o(){return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:[]).map(function(t){return{type:"Feature",geometry:{type:"Point",coordinates:[t.lng,t.lat]}}})}Object.defineProperty(e,"__esModule",{value:!0}),e.conjure=r,e.pointsToGeoJSON=o;var u=n(0),i={bound:[90,-180,-90,180],count:100,geojson:!1}}])});
//# sourceMappingURL=mirageo.map